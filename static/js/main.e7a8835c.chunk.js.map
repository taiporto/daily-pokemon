{"version":3,"sources":["pokeball.svg","styles/styleSettings.js","styles/globalStyle.js","utils/colorAnalysis.js","components/Title.jsx","components/PokemonCard.jsx","components/Button.jsx","components/DateSelector.jsx","components/DropContent.jsx","components/ButtonStrip.jsx","components/LoadingPokeball.jsx","Main.jsx","index.js"],"names":["module","exports","breakpoints","xs","sm","md","lg","xl","mediaQueries","limit","key","style","colors","GlobalStyle","createGlobalStyle","GrommetStyle","global","brand","hover","background","text","size","button","default","padding","vertical","horizontal","color","font","weight","border","radius","formField","select","options","container","grommet","extend","lineHeight","getColorDefinition","hexColor","colorStatsArray","match","reduce","acc","pair","test","indexOf","Math","max","StyledHeading","styled","Heading","Title","level","responsive","Card","div","props","mainColor","lighten","darken","insideColor","outsideColor","PokeInfo","PokeInfoSpan","span","PokemonCard","pokemonData","pokemonColors","hexValue","sprites","src","front_default","alt","name","types","length","map","type","index","arr","height","stats","stat","base_stat","width","display","justifyContent","margin","borderRadius","backgroundColor","StyledButton","Button","StyledDropButton","DropButton","PokeButton","buttonName","buttonType","buttonText","dropContent","onClick","alignself","dropAlign","top","right","e","DateSelector","setData","useState","selectValue","setSelectValue","selectOptions","Array","fill","item","FormField","label","Select","value","onChange","option","DropContent","defineBirthDateData","dayValue","setDayValue","monthValue","setMonthValue","data","Box","pad","StyledButtonStrip","ButtonStrip","children","loadingAnimation","keyframes","StyledImg","img","animationPlayStateValue","wholeMarginsValue","yMarginValue","xMarginValue","LoadingPokeball","yMargin","xMargin","wholeMargins","animationPlayState","Pokeball","Main","pokemon","setPokemon","setPokemonColors","cardIsOpen","setCardIsOpen","birthDate","setBirthDate","isLoading","setIsLoading","isFirstRun","useRef","fetchPokemon","pokemonNumber","fetch","then","res","json","catch","err","console","log","fecthPokemonColors","pokemonImg","Vibrant","getPalette","pallete","tempColorArray","hasOwnProperty","push","getHex","frequency","getPopulation","sort","a","b","handleClick","target","pokeNumber","floor","random","DateTime","local","toFormat","replace","tempData","colorArray","useEffect","current","birthDateDayOfYear","fromISO","Buttons","Grommet","theme","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a8835c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.6b4ffa55.svg\";","export const breakpoints = {\r\n  xs: 640,\r\n  sm: 760,\r\n  md: 992,\r\n  lg: 1200,\r\n  xl: 1600,\r\n}\r\n\r\nexport const mediaQueries = (limit, key) => {\r\n  return (style) =>\r\n    `@media (${limit}-width: ${breakpoints[key]}px) { ${style} }`\r\n}\r\n\r\nexport const colors = {\r\n  red: '#E32B2B',\r\n  darkred: '#C51A1A',\r\n  darkyellow: '#46360C',\r\n  lightgray: '#CCCCCC',\r\n  gray: '#AAAAAA',\r\n  darkgray: '#999999',\r\n  extradarkgray: '#444444',\r\n  white: \"#FFFFFF\",\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport {colors} from './styleSettings'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  body, html, #root{\r\n    height: 100%;\r\n  }\r\n  body {\r\n    text-rendering: optimizeLegibility !important;\r\n    -webkit-font-smoothing: antialiased !important;\r\n    font-family: Montserrat, sans-serif;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    background: radial-gradient(farthest-corner, rgba(252, 232, 51, 0.75) 42.12%, rgba(255, 203, 17, 0.705) 100%), #FFF171;\r\n    background-size: 100% 100%;\r\n    color: ${colors.darkyellow};\r\n  }\r\n  main {\r\n    height: 100%;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const GrommetStyle = {\r\n  global:{\r\n    colors:{\r\n      brand: colors.red,\r\n    },\r\n    hover:{\r\n      background:{\r\n        \"color\": \"active\",\r\n        \"opacity\": \"medium\"\r\n      }\r\n    }\r\n  },\r\n  text:{\r\n    \"small\":{\r\n      size:\".9rem\"\r\n    },\r\n    \"medium\":{\r\n      size: \"1rem\"\r\n    },\r\n    \"large\":{\r\n      size: \"1.2rem\"\r\n    }\r\n  },\r\n  button:{\r\n    default:{\r\n      padding:{\r\n        vertical: \"15px\",\r\n        horizontal: \"20px\"\r\n      },\r\n      color: colors.white,\r\n      font:{\r\n        size: \"large\",\r\n        weight: 600\r\n      },\r\n      background:{\r\n        color: colors.red\r\n      }\r\n    },\r\n    border:{\r\n      radius: \"10px\"\r\n    },\r\n    hover:{\r\n      background:{\r\n        color: colors.darkred\r\n      }\r\n    }\r\n  },\r\n  formField:{\r\n    text:{\r\n      size: \"normal\"\r\n    }\r\n  },\r\n  select:{\r\n    background: colors.white,\r\n    options:{\r\n      container:{\r\n        background: colors.white,\r\n      }\r\n    }\r\n  },\r\n  grommet:{\r\n    extend:{\r\n      lineHeight: \"29.7px\"\r\n    },\r\n  },\r\n}","export const createColorStats = (hexValue) => {\r\n    const splitHex = hexValue.match(/[a-f0-9]{1,2}/gi)\r\n  \r\n    return splitHex.reduce(\r\n      (acc, pair) => {\r\n        if (/[0-3]/.test(pair)) {\r\n          return [acc[0] + 1, acc[1], acc[2]]\r\n        } else if (/[d-f]/.test(pair)) {\r\n          return [acc[0], acc[1] + 1, acc[2]]\r\n        } else {\r\n          return [acc[0], acc[1], acc[2] + 1]\r\n        }\r\n      },\r\n      [0, 0, 0]\r\n    )\r\n  }\r\n  \r\nexport const getColorDefinition = (hexColor) => {\r\n    const colorStatsArray = createColorStats(hexColor)\r\n  \r\n    let indexOfHighestValue = colorStatsArray.indexOf(\r\n      Math.max(...colorStatsArray)\r\n    )\r\n  \r\n    switch (indexOfHighestValue) {\r\n      case 0:\r\n        return \"dark\"\r\n      case 1:\r\n        return \"light\"\r\n      case 2:\r\n      default:\r\n        return \"neutral\"\r\n    }\r\n  }","import React from \"react\"\r\nimport { Heading } from \"grommet\"\r\nimport styled from 'styled-components'\r\n\r\nconst StyledHeading = styled(Heading)`\r\nfont-weight: 800;\r\ntext-align: center\r\n`\r\n\r\nfunction Title({ color }) {\r\n  return <StyledHeading level={1} color={color} responsive={true}>Who's the daily pokémon?</StyledHeading>\r\n}\r\n\r\nexport default Title\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { darken, lighten } from \"polished\"\r\n\r\nimport { mediaQueries } from \"../styles/styleSettings\"\r\nimport { getColorDefinition } from \"../utils/colorAnalysis\"\r\n\r\nconst Card = styled.div`\r\n  width: 80vw;\r\n  margin: 30px auto;\r\n  padding: 15px 50px 30px;\r\n\r\n  border-radius: 15px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: ${(props) => {\r\n    switch (getColorDefinition(props.mainColor)) {\r\n      case \"dark\":\r\n        return lighten(0.8, \"\" + props.mainColor)\r\n      case \"light\":\r\n        return darken(0.8, \"\" + props.mainColor)\r\n      case \"neutral\":\r\n        return darken(0.7, \"\" + props.mainColor)\r\n      default:\r\n        return props.mainColor\r\n    }\r\n  }};\r\n\r\n  background: ${(props) => {\r\n    const insideColor = props.mainColor\r\n    const outsideColor = darken(0.2, \"\" + props.mainColor)\r\n    return `radial-gradient(147.98% 147.98% at 50% 21.66%, ${insideColor} 0%, ${outsideColor} 100%), ${outsideColor}`\r\n  }};\r\n\r\n  box-shadow: 0px 4px 11px rgba(0, 0, 0, 0.25);\r\n\r\n  & > img {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  ${mediaQueries(\"min\", \"sm\")`\r\n    width: 372px; \r\n`}\r\n`\r\n\r\nconst PokeInfo = styled.div`\r\n  width: 100%;\r\n  text-align: left;\r\n`\r\n\r\nconst PokeInfoSpan = styled.span`\r\n  text-align: left;\r\n  align-self: flex-start;\r\n`\r\n\r\nconst PokemonCard = ({ pokemonData, pokemonColors }) => {\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        mainColor={\r\n          getColorDefinition(pokemonColors[1].hexValue) === \"light\" ||\r\n          getColorDefinition(pokemonColors[1].hexValue) === \"neutral\"\r\n            ? pokemonColors[1].hexValue\r\n            : pokemonColors[0].hexValue\r\n        }\r\n      >\r\n        {/* Imagem */}\r\n        {pokemonData.sprites && (\r\n          <img\r\n            src={pokemonData.sprites.front_default}\r\n            alt={pokemonData.name}\r\n          ></img>\r\n        )}\r\n\r\n        {/* Nome */}\r\n        <h2>{pokemonData.name}</h2>\r\n\r\n        <PokeInfo>\r\n          {/* Types */}\r\n          <PokeInfoSpan>\r\n            {pokemonData.types.length > 1 ? \"Types: \" : \"Type: \"}\r\n            {pokemonData.types.map((type, index, arr) =>\r\n              index < arr.length - 1 ? (\r\n                <span key={index}>{type.type.name}, </span>\r\n              ) : (\r\n                <span key={index}>{type.type.name}</span>\r\n              )\r\n            )}\r\n          </PokeInfoSpan>\r\n\r\n          <br />\r\n\r\n          {/* Height and Weight */}\r\n          <PokeInfoSpan>Height: {pokemonData.height*10}cm</PokeInfoSpan><br />\r\n          <PokeInfoSpan>Weight: {pokemonData.weight/10}kg</PokeInfoSpan><br />\r\n\r\n          {/* Evolutions */}\r\n\r\n          {/* Stats */}\r\n          <PokeInfoSpan>\r\n            Stats:<br/>\r\n            {pokemonData.stats.map((stat, index, arr) =>\r\n              index < arr.length - 1 ? (\r\n                <span key={index}>&nbsp;&nbsp;{stat.stat.name}: {stat.base_stat}<br/></span>\r\n              ) : (\r\n                <span key={index}>&nbsp;&nbsp;{stat.stat.name}: {stat.base_stat}</span>\r\n              )\r\n            )}\r\n          </PokeInfoSpan>\r\n\r\n          {/* Flavor text */}\r\n        </PokeInfo>\r\n\r\n        <div style={{width: \"100%\", display: \"flex\", justifyContent: \"center\", margin: \"20px auto\"}}>\r\n          {pokemonColors.map((color, index, arr) => (\r\n            <div\r\n              style={{\r\n                width: \"25px\",\r\n                height: \"25px\",\r\n                margin: \"0 5px\",\r\n                borderRadius: \"100px\",\r\n                backgroundColor: color.hexValue,\r\n              }}\r\n              key={index}\r\n            >\r\n             {/*  <span>\r\n                {color.name}: {color.hexValue} <br />\r\n              </span> */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { Button, DropButton } from \"grommet\"\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 1.2vh 10px;\r\n  filter: drop-shadow(0px 4px 8px rgba(65, 55, 1, 0.25));\r\n  transition: all 0.15s ease-out;\r\n`\r\n\r\nconst StyledDropButton = styled(DropButton)`\r\n  margin: 1.2vh 10px;\r\n  filter: drop-shadow(0px 4px 8px rgba(65, 55, 1, 0.25));\r\n  transition: all 0.15s ease-out;\r\n`\r\n\r\nconst PokeButton = ({ buttonName, buttonType, buttonText, dropContent, onClick }) => {\r\n  return buttonType === \"Dropdown\"?\r\n   (\r\n    <StyledDropButton\r\n      alignself=\"center\"\r\n      dropAlign={{ top: 'bottom', right: 'right' }}\r\n      dropContent={dropContent}\r\n      name={buttonName}\r\n      onClick={onClick}>\r\n      {buttonText}\r\n    </StyledDropButton>\r\n  ) :\r\n  (\r\n    <StyledButton onClick={(e)=>onClick(e)} name={buttonName} alignself=\"center\">\r\n      {buttonText}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PokeButton","import React, {useState} from \"react\"\r\nimport { Select, FormField } from \"grommet\"\r\n\r\nconst DateSelector = ({ type, setData }) => {\r\n  const [selectValue, setSelectValue] = useState(\"1\")\r\n\r\n  const size = type === 'day' ? 31 : 12\r\n\r\n  const selectOptions = new Array(size).fill(null).map((item, index, arr) => index+1)\r\n\r\n  return (\r\n    <FormField label={type==='day'?'Day: ': 'Month: '}>\r\n      <Select\r\n        options={selectOptions}\r\n        value={selectValue}\r\n        onChange={({ option }) => {setData(option, type); setSelectValue(option)}}\r\n      />\r\n    </FormField>\r\n  )\r\n}\r\n\r\nexport default DateSelector\r\n","import React, {useState} from \"react\"\nimport { Box } from \"grommet\"\n\nimport { colors } from \"../styles/styleSettings\"\n\nimport DateSelector from './DateSelector'\n\nconst DropContent = ({ defineBirthDateData }) => {\n  const [dayValue, setDayValue] = useState(\"\")\n  const [monthValue, setMonthValue] = useState(\"\")\n\n  const setData = (data, type) => {\n    if(data < 10) data=\"0\"+data\n    type === \"day\" ? setDayValue(data) : setMonthValue(data);\n  }\n\n  return (\n    <Box background={colors.red} pad=\"medium\" responsive=\"true\" onChange={(dayValue !== '' && monthValue!== '') ? defineBirthDateData(`2020-${monthValue}-${dayValue}`) : 0}>\n      <DateSelector\n        type=\"month\"\n        setData={setData}\n      />\n      <DateSelector\n        type=\"day\"\n        setData={setData}\n      />\n    </Box>\n  )\n}\n\nexport default DropContent","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { mediaQueries } from \"../styles/styleSettings\"\r\n\r\nconst StyledButtonStrip = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  padding: 30px 20px;\r\n\r\n  ${mediaQueries(\"min\", \"md\")`\r\n    flex-direction: row;\r\n`}\r\n`\r\n\r\nconst ButtonStrip = ({ children }) => {\r\n  return (\r\n    <StyledButtonStrip> \r\n      {children}\r\n    </StyledButtonStrip>\r\n  )\r\n}\r\n\r\nexport default ButtonStrip\r\n","import React from 'react'\r\nimport styled, {keyframes} from 'styled-components'\r\n\r\nimport Pokeball from '../pokeball.svg'\r\n\r\nconst loadingAnimation = keyframes`\r\n    0%{transform: rotate(0deg);}\r\n    100%{transform: rotate(361deg);}\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n    width: 15%;\r\n    height: auto;\r\n    animation: ${loadingAnimation} .8s infinite cubic-bezier(.05,-0.07,.45,1.45);\r\n    animation-play-state: ${props => props.animationPlayStateValue};\r\n    margin: ${props => props.wholeMarginsValue ? props.wholeMarginsValue[0] : props.yMarginValue || 0}\r\n            ${props => props.wholeMarginsValue ? props.wholeMarginsValue[1] : props.xMarginValue || 0}\r\n            ${props => props.wholeMarginsValue ? props.wholeMarginsValue[2] : props.yMarginValue || 0}\r\n            ${props => props.wholeMarginsValue ? props.wholeMarginsValue[3] : props.xMarginValue || 0}\r\n`\r\n\r\nconst LoadingPokeball = ({yMargin, xMargin, wholeMargins, animationPlayState}) => {\r\n    return(\r\n        <StyledImg src={Pokeball}\r\n                    alt=\"Pokeball\"\r\n                    yMarginValue={yMargin}\r\n                    xMarginValue={xMargin}\r\n                    wholeMarginsValue={wholeMargins}\r\n                    animationPlayStateValue={animationPlayState}\r\n                    />\r\n    )\r\n}\r\n\r\n\r\nexport default LoadingPokeball","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Grommet, Box } from 'grommet'\r\nimport { DateTime } from \"luxon\"\r\nimport * as Vibrant from \"node-vibrant\"\r\n\r\nimport {GlobalStyle, GrommetStyle} from \"./styles/globalStyle\"\r\n\r\n\r\nimport { getColorDefinition } from \"./utils/colorAnalysis\"\r\n\r\nimport Title from \"./components/Title\"\r\nimport PokemonCard from \"./components/PokemonCard\"\r\nimport Button from \"./components/Button\"\r\nimport DropContent from './components/DropContent'\r\nimport ButtonStrip from \"./components/ButtonStrip\"\r\nimport LoadingPokeball from \"./components/LoadingPokeball\"\r\n\r\nconst Main = () => {\r\n\r\n  const [pokemon, setPokemon] = useState({})\r\n\r\n  const [pokemonColors, setPokemonColors] = useState([])\r\n\r\n  const [cardIsOpen, setCardIsOpen] = useState(false)\r\n\r\n  const [birthDate, setBirthDate] = useState(\"\")\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  const isFirstRun = useRef(true)\r\n\r\n  const fetchPokemon = (pokemonNumber) => {\r\n    return fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonNumber}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        return data\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const fecthPokemonColors = (pokemonImg) => {\r\n    return Vibrant.from(pokemonImg).getPalette().then((pallete) => {\r\n      \r\n        let tempColorArray = []\r\n\r\n        for (const color in pallete) {\r\n          if (pallete.hasOwnProperty(color) && pallete[color]) {\r\n            tempColorArray.push({\r\n              name: color,\r\n              hexValue: pallete[color].getHex(),\r\n              frequency: pallete[color].getPopulation(),\r\n            })\r\n          }\r\n        }\r\n\r\n        tempColorArray.sort((a, b) => {\r\n          return b.frequency - a.frequency\r\n        })\r\n\r\n        tempColorArray.sort((a, b) => {\r\n          if (\r\n            getColorDefinition(a.hexValue) === \"light\" &&\r\n            (getColorDefinition(b.hexValue) === \"dark\" ||\r\n              getColorDefinition(b.hexValue) === \"neutral\")\r\n          ) {\r\n            return b - a\r\n          } else {\r\n            return a - b\r\n          }\r\n        })\r\n\r\n        return tempColorArray\r\n      }).catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  \r\n  const handleClick = (e) => {\r\n    const { name } = e.target\r\n    if (name === \"main_Button\") {\r\n      setIsLoading(true)\r\n\r\n      let pokeNumber = 0\r\n\r\n      // Se o card já não estiver aberto\r\n      if (!cardIsOpen) {\r\n        pokeNumber = DateTime.local().toFormat(\"ooo\").replace(/^0/, \"\")\r\n      } else {\r\n        pokeNumber = Math.floor(Math.random() * 365) + 1\r\n      }\r\n\r\n      fetchPokemon(pokeNumber).then((tempData) => {\r\n        setPokemon({\r\n          ...tempData,\r\n        })\r\n\r\n        fecthPokemonColors(tempData.sprites.front_default).then(\r\n          (colorArray) => {\r\n            setPokemonColors(colorArray)\r\n            setIsLoading(false)\r\n          }\r\n        )\r\n      })\r\n\r\n      setCardIsOpen(true)\r\n    }\r\n  }\r\n\r\n  const defineBirthDateData = (data) => {\r\n    setBirthDate(data)\r\n  }\r\n\r\n  //Executar toda vez que o valor de birthDate mudar\r\n  useEffect(() => {\r\n    if (isFirstRun.current === false) {\r\n\r\n      setIsLoading(true)\r\n\r\n      const birthDateDayOfYear = DateTime.fromISO(birthDate).toFormat(\"ooo\").replace(/^0/, \"\")\r\n\r\n      fetchPokemon(birthDateDayOfYear).then((tempData) => {\r\n        setPokemon({\r\n          ...tempData,\r\n        })\r\n\r\n        fecthPokemonColors(tempData.sprites.front_default).then(\r\n          (colorArray) => {\r\n            setPokemonColors(colorArray)\r\n            setIsLoading(false)\r\n          }\r\n        )\r\n      })\r\n\r\n      setCardIsOpen(true)\r\n    } else {\r\n      isFirstRun.current = false\r\n    }\r\n  }, [birthDate])\r\n\r\n  const Buttons = [\r\n    <Button\r\n      key=\"0\"\r\n      buttonName=\"main_Button\"\r\n      buttonText={\r\n        cardIsOpen ? \"Get another pokémon!\" : \"Get the daily pokémon!\"\r\n      }\r\n      onClick={handleClick}\r\n    />,\r\n    <Button\r\n      key=\"1\"\r\n      buttonName=\"birthdate_Button\"\r\n      buttonType=\"Dropdown\"\r\n      buttonText={\"Get my birthday pokémon!\"}\r\n      dropContent={<DropContent defineBirthDateData={defineBirthDateData}/>}\r\n      onClick={handleClick}\r\n    />  \r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Grommet theme={GrommetStyle}>\r\n      <main>\r\n        <Box margin={{\"vertical\": \"2em\",\"horizontal\":\"auto\"}} align=\"center\">\r\n          <Title color=\"mainText\" />\r\n          <ButtonStrip cardIsOpen={cardIsOpen} handleClick={handleClick} defineBirthDateData={defineBirthDateData} children={[...Buttons]}/>\r\n          <Box fill=\"true\">\r\n            {isLoading ? (\r\n              !cardIsOpen ?\r\n                <LoadingPokeball yMargin={\"2em\"} xMargin={\"auto\"} animationPlayState={\"paused\"}/>\r\n                :\r\n                <LoadingPokeball yMargin={\"2em\"} xMargin={\"auto\"} animationPlayState={\"running\"}/>\r\n            ) : (\r\n              <PokemonCard\r\n                pokemonData={pokemon}\r\n                pokemonColors={pokemonColors}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </main>\r\n    </Grommet>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}